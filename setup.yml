---

- hosts: all
  become: yes # This means that all tasks will be executed with sudo
  roles:
    - postgres

  vars_files:
    - env_vars/base.yml

  # vars:
  #   ansible_python_interpreter: /usr/bin/python3
  #   password: hashed_password
  #   db_name: project_db
  #   db_user: mistalaba
  #   db_password: fee1g00d
  #   # created with:
  #   # python -c "from passlib.hash import sha512_crypt; import getpass; print(sha512_crypt.using(rounds=5000).hash(getpass.getpass()))"
  #   postgres_password: $6$Trey7ZM8T9aJC8dX$IcqI4J4FNiOZVGNPRs325FdgGS4gX86/2SSbwqkw/8btEmtgQYBBDWZ2cttt74IDNqlA6fJYBZyPyyB5So1uP.

  tasks:
    - name: Update apt
      apt: update_cache=yes

    - name: Add key for jonathonf PPA
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 4AB0F789CBA31744CC7DA76A8CF63AD3F06FC659
        state: present

    - name: Add jonathonf PPA
      apt_repository:
        repo: deb http://ppa.launchpad.net/jonathonf/python-3.7/ubuntu xenial main
        state: present

    - name: Install Python 3.7
      apt:
        name: python3.7
        state: present
        update_cache: yes

    - name: Install base packages
      apt:
        name : ['locales', 'build-essential', 'acl', 'ntp', 'htop', 'git', 'python-pip', 'python3-pip']
        state: present

    - name: Upgrade pip
      pip: name=pip state=latest

    - name: update .bash_aliases
      become_user: vagrant
      lineinfile:
        dest: /home/vagrant/.bash_aliases
        line: 'alias p3="python3.7"'
        mode: 0644
        state: present
        create: yes

    - name: Add key for Postgres repo
      apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc state=present

    - name: Add Postgres repo to sources list
      apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' state=present

    - name: Install PostgreSQL
      apt:
        name: postgresql-10
        state: present

    - name: Install dependencies for PostgreSQL
      apt:
        name: ['libpq-dev', 'python3-psycopg2']

    - name: Start PostgreSQL and enable at boot
      service: name=postgresql
               enabled=yes
               state=started
               use=service

    - name: Set admin postgres user password
      user: name=postgres password={{ postgres_password }}

    - name: Ensure database is created
      become: yes
      become_user: postgres
      postgresql_db: name={{ project_name }}
                    encoding='UTF-8'
                    lc_collate='en_US.UTF-8'
                    lc_ctype='en_US.UTF-8'
                    template='template0'
                    state=present

    - name: Ensure user has access to the database
      become: yes
      become_user: postgres
      postgresql_user: db={{ project_name }}
                      name={{ project_name }}
                      password={{ db_password }}
                      encrypted=yes
                      priv=ALL
                      state=present

    - name: Ensure 'vagrant' user has access to the database
      become: yes
      become_user: postgres
      postgresql_user: db={{ project_name }}
                      name=vagrant
                      password={{ db_password }}
                      encrypted=yes
                      priv=ALL
                      role_attr_flags=CREATEDB,CREATEROLE,SUPERUSER
                      state=present

    - name: Ensure postgresql is listening on all localhost
      lineinfile: dest=/etc/postgresql/10/main/postgresql.conf
          regexp='^#?listen_addresses\s*='
          line="listen_addresses = '*'"
          state=present
          backrefs=yes
      notify: restart postgresql

    - name: Update pg_hba.conf
      blockinfile:
        dest: /etc/postgresql/10/main/pg_hba.conf
        block: |
          host    all             all             192.168.32.10/24        md5
          host    all             all             10.0.2.2/24             md5

    - lineinfile: dest=/etc/postgresql/10/main/pg_hba.conf
          regexp='local\s+all\s+all\s+peer'
          line='local all all md5'
          insertbefore=BOF
          backrefs=yes
      notify: restart postgresql

  handlers:
    - name: restart postgresql
      service: name=postgresql state=restarted use=service
